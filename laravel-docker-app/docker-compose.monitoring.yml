version: "3.8"

services:
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: rims_prometheus
    restart: unless-stopped
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - rims_monitoring
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: rims_grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./docker/monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    networks:
      - rims_monitoring
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Node Exporter for system metrics
  node_exporter:
    image: prom/node-exporter:latest
    container_name: rims_node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - rims_monitoring
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

  # MySQL Exporter for database metrics
  mysql_exporter:
    image: prom/mysqld-exporter:latest
    container_name: rims_mysql_exporter
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=${MYSQL_USER}:${MYSQL_PASSWORD}@(db:3306)/${MYSQL_DATABASE}
    networks:
      - rims_network
      - rims_monitoring
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

  # Redis Exporter
  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: rims_redis_exporter
    restart: unless-stopped
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - rims_network
      - rims_monitoring
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

  # Nginx Exporter
  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: rims_nginx_exporter
    restart: unless-stopped
    command:
      - '-nginx.scrape-uri=http://webserver/nginx_status'
    networks:
      - rims_network
      - rims_monitoring
    depends_on:
      - webserver
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: rims_loki
    restart: unless-stopped
    volumes:
      - ./docker/monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - rims_monitoring
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Promtail for log shipping
  promtail:
    image: grafana/promtail:latest
    container_name: rims_promtail
    restart: unless-stopped
    volumes:
      - ./docker/monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/www/html/storage/logs:/app/logs:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - rims_network
      - rims_monitoring
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  rims_monitoring:
    driver: bridge
  rims_network:
    external: true