version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: rims_app
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - "5173:5173"
    volumes:
      - ./src:/var/www/html
    networks:
      - rims_network
    depends_on:
      - db

  webserver:
    image: nginx:alpine
    container_name: rims_webserver
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default-dev.conf:/etc/nginx/conf.d/default.conf
    networks:
      - rims_network
    depends_on:
      - app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rims.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.rims.entrypoints=websecure"
      - "traefik.http.routers.rims.tls=true"
      - "traefik.http.routers.rims.middlewares=security-headers"
      - "traefik.http.services.rims.loadbalancer.server.port=80"
      - "traefik.docker.network=rims_network"

  db:
    image: mysql:8.0
    platform: linux/amd64
    container_name: rims_db
    restart: unless-stopped
    ports:
      - "3308:3306"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - rims_network

  redis:
    image: redis:alpine
    container_name: rims_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    volumes:
      - redisdata:/data
    networks:
      - rims_network
      - rims_internal
    expose:
      - "6379"

  queue:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: rims_queue
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-jobs=100 --max-time=3600 --memory=128
    environment:
      - PHP_MEMORY_LIMIT=256M
    volumes:
      - ./src:/var/www/html
    networks:
      - rims_network
    depends_on:
      - db
      - redis

  scheduler:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: rims_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    command: /bin/sh -c "while true; do php artisan schedule:run >> /dev/null 2>&1; sleep 60; done"
    volumes:
      - ./src:/var/www/html
    networks:
      - rims_network
    depends_on:
      - db
      - redis

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local

networks:
  rims_network:
    driver: bridge
  rims_internal:
    driver: bridge
    internal: true